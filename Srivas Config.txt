{SrivasConfig-scnfg-version:1.0}


<$Everything requires angle brackets when starting (except modules and header)>
<$All dollar signs indicate a line comment and all characters after the dollar sign will be ignored.>


<$
	The header <SrivasConfig-cnfg-version:X> MUST be the first string in 
	the file or else it will be considered as invalid. Newer libraries 
	can read older cnfg versions but older libraries cannot read 
	newer cnfg versions.
	
>

<$Property names CANNOT contain spaces. Values can have spaces.>

<$
	Keywords cannot be property or setting names. 
	Note that in this document 'property' and 'setting' are NOT keywords.
>

<$Below is a sample, simple syntax of a property and it's setting>
<property:setting>

<$Below is a sample, syntax of property with list of valid settings>
<property:setting[setting, setting1, setting2, setting3]>

<$
	Below is a sample, syntax of property with list of valid settings 
	with default value of setting2
>
<property:setting[setting,setting1,default.setting2]>

<$
	A property cannot be empty, if there is no setting for the property use 
	the 'novalue' keyword like so: 
>
<property:novalue>
<$Lists are compatible with a novalue setting, and if there is a default setting it will be ignored.>
	
<$Enforce use of the default value>
<property:usedefault[setting,setting1,default.setting2]>

<$Repeated properties - latest is take and earlier ones ignored>
<property:setting>
<property:setting1>
<$property is set to setting1>

<$SETTING VALUES>
<$
	String - use quotes if using spaces. There is no separate indication for 
	char/characters, use characters as a String.
>
<property:mySetting>
<property:"my setting">

<$Integer/Float/Double/Long/All numbers>
<property:1024>

<$Boolean - true and false are keywords and cannot be used for property names.>
<property:true>
<property:false>

<$Note about boolean, and numeric values: all values 
are stored/read/manipulated as strings, regardless of type.>

<$MODULES>

<$	Modules are a set of properties for better organization. 
	A property of the same name can be inside and outside of the
	module, and are considered as different properties. 
	All the normal property rules mentioned above apply inside a module.
>
	
<$Example>
{myModule}
	<property:setting>
	<property2:setting1>
{myModule:end}
<$ Remember, the 'end-' in the footer is a keyword. Can not be used for property names.>

<$Nested modules are not yet supported>
<$Duplicate modules - later modules will overwrite the properties 
	of an earlier module, if applicable.>

<$
	And that's about it. This is the documentation for the version 1 of Srivas Config 
	- made to be simple.
	Last but not least this is not an advanced configuration solution 
	like json xml what not, it is just to save and 
	retrieve values saved in textboxes, boolean flags, etc.	
>

<$
	Keywords: 
	true
	false
	end
	novalue
	usedefault
	default
	scnfg

 	As mentioned previously, keywords cannot be module or property names. 
 	They can be values.
>

<$ All configurations should end with the following line.
	Any comments, properties, modules, etc will be ignored after this line.

>

{scnfg:end}
